plugins {
    id 'java'
    id "org.springframework.boot" version "2.2.2.RELEASE"
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "io.freefair.lombok" version "5.0.0"
    id 'java-library'
    id 'org.hidetake.swagger.generator' version '2.18.2'
    //querydsl 추가
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.bside.breadgood'
version = '0.0.1-SNAPSHOT' + new Date().format("yyyyMMddHHmmss")
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

processResources {
	from('config/') {
		into '.'
	}
}


repositories {
//    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

//    compile('org.springframework.boot:spring-boot-devtools')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.4.1'
    implementation 'io.swagger:swagger-annotations:1.5.22'

    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    compile("io.swagger:swagger-models:1.5.21")
    compile("io.springfox:springfox-swagger2:2.9.2") {
        exclude module: 'swagger-annotations' exclude module: 'swagger-models'
    }

    compile group: 'io.springfox', name: 'springfox-bean-validators', version: '2.9.2'



    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'

//    compile group: 'org.springframework.cloud', name: 'spring-cloud-aws', ext: 'pom'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-autoconfigure', version: '2.2.1.RELEASE'

//    implementation 'com.querydsl:querydsl-jpa'

    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.60'

    testImplementation 'io.rest-assured:rest-assured'
    runtimeOnly 'com.h2database:h2:1.4.200'

}

swaggerSources {
    petstore {
        inputFile = file('codegen/petstore.yaml')
        code {
            language = 'spring'
            configFile = file('codegen/config.json')
            outputDir = file("$projectDir/src/main/generated")
            wipeOutputDir = false
        }
    }
}

compileJava.dependsOn swaggerSources.petstore.code
sourceSets.main.java.srcDir "${swaggerSources.petstore.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.petstore.code.outputDir}/src/main/resources"

test {
    useJUnitPlatform()
}

////querydsl 추가 시작
//def querydslDir = "$buildDir/generated/querydsl"
//
//querydsl {
//    jpa = true
//    querydslSourcesDir = querydslDir
//}
//
//sourceSets {
//    main.java.srcDir querydslDir
//}
//
//configurations {
//    querydsl.extendsFrom compileClasspath
//}
//
//compileQuerydsl {
//    options.annotationProcessorPath = configurations.querydsl
//}
//querydsl 추가 끝
//task dockerComposeUp(type: Exec) {
//    group = 'mysql'
//    commandLine "docker-compose", "-f", "docker/mariadb.yml", "up", "-d"
//}
//
//task dockerComposeDown(type: Exec) {
//    group = 'mysql'
//    commandLine "docker-compose", "-f", "docker/mariadb.yml", "down"
//}
//
//if (System.env['BOOTSTRAP_DOCKER'] == null) {
//    bootRun.dependsOn dockerComposeUp
//    bootRun.finalizedBy dockerComposeDown
//
//    test.dependsOn dockerComposeUp
//    test.finalizedBy dockerComposeDown
//}
